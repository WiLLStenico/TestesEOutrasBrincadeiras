package projeto2;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.StringTokenizer;
import javax.swing.table.DefaultTableModel;


public class jfRelLiPaci_1 extends javax.swing.JFrame {

    /** Creates new form jfRelLiPaci */
    public jfRelLiPaci_1() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRelLiPaci = new javax.swing.JTable();
        jbRelLiPaciFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Relatório Listagem de Pacientes");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(":: Relatório Listagem de Pacientes ::");

        jtRelLiPaci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Nascimento", "DDD", "Telefone", "E-Mail", "Profissão", "Endereço", "Número", "Bairro", "Cidade", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtRelLiPaci);
        jtRelLiPaci.getColumnModel().getColumn(0).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(1).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(2).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(3).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(4).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(5).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(6).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(7).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(8).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(9).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(10).setResizable(false);
        jtRelLiPaci.getColumnModel().getColumn(11).setResizable(false);

        jbRelLiPaciFechar.setText("Fechar");
        jbRelLiPaciFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRelLiPaciFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(jLabel2)
                .addContainerGap(400, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(473, 473, 473)
                .addComponent(jbRelLiPaciFechar)
                .addContainerGap(502, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbRelLiPaciFechar)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

       //Vetores pacientes
       String [] aCodPaci = new String[100];
       final String [] aNomePaci = new String[100];
       final String [] aNascimentoPaci = new String[100];
       final String [] aDDDPaci = new String[100];
       final String [] aTelefonePaci = new String[100];
       final String [] aEmailPaci = new String[100];
       final String [] aProfissaoPaci = new String[100];
       final String [] aEnderecoPaci = new String[100];
       final String [] aNumeroPaci = new String[100];
       final String [] aBairroPaci = new String[100];
       final String [] aCidadePaci = new String[100];
       final String [] aEstadoPaci = new String[100];

       int nPaci = 0;

       String linhaPaci;
       try {
          FileReader reader = new FileReader("Paciente.txt");
          BufferedReader leitor = new BufferedReader(reader);
          StringTokenizer st = null;

          while ((linhaPaci = leitor.readLine()) != null) {

             st = new StringTokenizer(linhaPaci, "\t");
             String dados = null;

             while (st.hasMoreTokens()) {

                // Código
                dados = st.nextToken();
                System.out.println(dados);
                aCodPaci[nPaci] = dados;

                // Nome
                dados = st.nextToken();
                System.out.println(dados);
                aNomePaci[nPaci] = dados;

                // Nascimento
                dados = st.nextToken();
                System.out.println(dados);
                aNascimentoPaci[nPaci] = dados;

                // DDD
                dados = st.nextToken();
                System.out.println(dados);
                aDDDPaci[nPaci] = dados;

                // Telefone
                dados = st.nextToken();
                System.out.println(dados);
                aTelefonePaci[nPaci] = dados;

                // Email
                dados = st.nextToken();
                System.out.println(dados);
                aEmailPaci[nPaci] = dados;

                // Profissao
                dados = st.nextToken();
                System.out.println(dados);
                aProfissaoPaci[nPaci] = dados;

                // Endereco
                dados = st.nextToken();
                System.out.println(dados);
                aEnderecoPaci[nPaci] = dados;

                // Numero
                dados = st.nextToken();
                System.out.println(dados);
                aNumeroPaci[nPaci] = dados;

                // Bairro
                dados = st.nextToken();
                System.out.println(dados);
                aBairroPaci[nPaci] = dados;

                // Cidade
                dados = st.nextToken();
                System.out.println(dados);
                aCidadePaci[nPaci] = dados;

                // Estado
                dados = st.nextToken();
                System.out.println(dados);
                aEstadoPaci[nPaci] = dados;

                nPaci ++;

             }
          }

          leitor.close();
          reader.close();

       } catch (Exception e) {
          e.printStackTrace();
       }


        DefaultTableModel model = (DefaultTableModel) jtRelLiPaci.getModel();
        for(int i = 0; i < aCodPaci.length; i++ )
        {
            Object[] o = new Object[]{ aCodPaci[i],  aNomePaci[i],  aNascimentoPaci[i],  aDDDPaci[i],  aTelefonePaci[i],  aEmailPaci[i],  aProfissaoPaci[i],  aEnderecoPaci[i],  aNumeroPaci[i],  aBairroPaci[i],  aCidadePaci[i],  aEstadoPaci[i] };
            model.addRow(o);
        }

    }//GEN-LAST:event_formComponentShown

    private void jbRelLiPaciFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRelLiPaciFecharActionPerformed
        this.setVisible(false);
}//GEN-LAST:event_jbRelLiPaciFecharActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfRelLiPaci().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbRelLiPaciFechar;
    private javax.swing.JTable jtRelLiPaci;
    // End of variables declaration//GEN-END:variables

}
